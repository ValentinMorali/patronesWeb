/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Directive, ElementRef, Input, TemplateRef } from '@angular/core';
import { escapeHTML } from './value-utils';
import * as ɵngcc0 from '@angular/core';
var NgItemLabelDirective = /** @class */ (function () {
    function NgItemLabelDirective(element) {
        this.element = element;
        this.escape = true;
    }
    /**
     * @param {?} changes
     * @return {?}
     */
    NgItemLabelDirective.prototype.ngOnChanges = /**
     * @param {?} changes
     * @return {?}
     */
    function (changes) {
        this.element.nativeElement.innerHTML = this.escape ?
            escapeHTML(this.ngItemLabel) :
            this.ngItemLabel;
    };
    /** @nocollapse */
    NgItemLabelDirective.ctorParameters = function () { return [
        { type: ElementRef }
    ]; };
    NgItemLabelDirective.propDecorators = {
        ngItemLabel: [{ type: Input }],
        escape: [{ type: Input }]
    };
NgItemLabelDirective.ngDirectiveDef = ɵngcc0.ɵɵdefineDirective({ type: NgItemLabelDirective, selectors: [["", "ngItemLabel", ""]], factory: function NgItemLabelDirective_Factory(t) { return new (t || NgItemLabelDirective)(ɵngcc0.ɵɵdirectiveInject(ElementRef)); }, inputs: { escape: "escape", ngItemLabel: "ngItemLabel" }, features: [ɵngcc0.ɵɵNgOnChangesFeature()] });
/*@__PURE__*/ ɵngcc0.ɵsetClassMetadata(NgItemLabelDirective, [{
        type: Directive,
        args: [{ selector: '[ngItemLabel]' }]
    }], function () { return [{ type: ElementRef }]; }, { element: [], escape: [{
            type: Input
        }], ngOnChanges: [], ngItemLabel: [{
            type: Input
        }] });
    return NgItemLabelDirective;
}());
export { NgItemLabelDirective };
if (false) {
    /** @type {?} */
    NgItemLabelDirective.prototype.ngItemLabel;
    /** @type {?} */
    NgItemLabelDirective.prototype.escape;
    /**
     * @type {?}
     * @private
     */
    NgItemLabelDirective.prototype.element;
}
var NgOptionTemplateDirective = /** @class */ (function () {
    function NgOptionTemplateDirective(template) {
        this.template = template;
    }
    /** @nocollapse */
    NgOptionTemplateDirective.ctorParameters = function () { return [
        { type: TemplateRef }
    ]; };
NgOptionTemplateDirective.ngDirectiveDef = ɵngcc0.ɵɵdefineDirective({ type: NgOptionTemplateDirective, selectors: [["", "ng-option-tmp", ""]], factory: function NgOptionTemplateDirective_Factory(t) { return new (t || NgOptionTemplateDirective)(ɵngcc0.ɵɵdirectiveInject(TemplateRef)); } });
/*@__PURE__*/ ɵngcc0.ɵsetClassMetadata(NgOptionTemplateDirective, [{
        type: Directive,
        args: [{ selector: '[ng-option-tmp]' }]
    }], function () { return [{ type: TemplateRef }]; }, { template: [] });
    return NgOptionTemplateDirective;
}());
export { NgOptionTemplateDirective };
if (false) {
    /** @type {?} */
    NgOptionTemplateDirective.prototype.template;
}
var NgOptgroupTemplateDirective = /** @class */ (function () {
    function NgOptgroupTemplateDirective(template) {
        this.template = template;
    }
    /** @nocollapse */
    NgOptgroupTemplateDirective.ctorParameters = function () { return [
        { type: TemplateRef }
    ]; };
NgOptgroupTemplateDirective.ngDirectiveDef = ɵngcc0.ɵɵdefineDirective({ type: NgOptgroupTemplateDirective, selectors: [["", "ng-optgroup-tmp", ""]], factory: function NgOptgroupTemplateDirective_Factory(t) { return new (t || NgOptgroupTemplateDirective)(ɵngcc0.ɵɵdirectiveInject(TemplateRef)); } });
/*@__PURE__*/ ɵngcc0.ɵsetClassMetadata(NgOptgroupTemplateDirective, [{
        type: Directive,
        args: [{ selector: '[ng-optgroup-tmp]' }]
    }], function () { return [{ type: TemplateRef }]; }, { template: [] });
    return NgOptgroupTemplateDirective;
}());
export { NgOptgroupTemplateDirective };
if (false) {
    /** @type {?} */
    NgOptgroupTemplateDirective.prototype.template;
}
var NgLabelTemplateDirective = /** @class */ (function () {
    function NgLabelTemplateDirective(template) {
        this.template = template;
    }
    /** @nocollapse */
    NgLabelTemplateDirective.ctorParameters = function () { return [
        { type: TemplateRef }
    ]; };
NgLabelTemplateDirective.ngDirectiveDef = ɵngcc0.ɵɵdefineDirective({ type: NgLabelTemplateDirective, selectors: [["", "ng-label-tmp", ""]], factory: function NgLabelTemplateDirective_Factory(t) { return new (t || NgLabelTemplateDirective)(ɵngcc0.ɵɵdirectiveInject(TemplateRef)); } });
/*@__PURE__*/ ɵngcc0.ɵsetClassMetadata(NgLabelTemplateDirective, [{
        type: Directive,
        args: [{ selector: '[ng-label-tmp]' }]
    }], function () { return [{ type: TemplateRef }]; }, { template: [] });
    return NgLabelTemplateDirective;
}());
export { NgLabelTemplateDirective };
if (false) {
    /** @type {?} */
    NgLabelTemplateDirective.prototype.template;
}
var NgMultiLabelTemplateDirective = /** @class */ (function () {
    function NgMultiLabelTemplateDirective(template) {
        this.template = template;
    }
    /** @nocollapse */
    NgMultiLabelTemplateDirective.ctorParameters = function () { return [
        { type: TemplateRef }
    ]; };
NgMultiLabelTemplateDirective.ngDirectiveDef = ɵngcc0.ɵɵdefineDirective({ type: NgMultiLabelTemplateDirective, selectors: [["", "ng-multi-label-tmp", ""]], factory: function NgMultiLabelTemplateDirective_Factory(t) { return new (t || NgMultiLabelTemplateDirective)(ɵngcc0.ɵɵdirectiveInject(TemplateRef)); } });
/*@__PURE__*/ ɵngcc0.ɵsetClassMetadata(NgMultiLabelTemplateDirective, [{
        type: Directive,
        args: [{ selector: '[ng-multi-label-tmp]' }]
    }], function () { return [{ type: TemplateRef }]; }, { template: [] });
    return NgMultiLabelTemplateDirective;
}());
export { NgMultiLabelTemplateDirective };
if (false) {
    /** @type {?} */
    NgMultiLabelTemplateDirective.prototype.template;
}
var NgHeaderTemplateDirective = /** @class */ (function () {
    function NgHeaderTemplateDirective(template) {
        this.template = template;
    }
    /** @nocollapse */
    NgHeaderTemplateDirective.ctorParameters = function () { return [
        { type: TemplateRef }
    ]; };
NgHeaderTemplateDirective.ngDirectiveDef = ɵngcc0.ɵɵdefineDirective({ type: NgHeaderTemplateDirective, selectors: [["", "ng-header-tmp", ""]], factory: function NgHeaderTemplateDirective_Factory(t) { return new (t || NgHeaderTemplateDirective)(ɵngcc0.ɵɵdirectiveInject(TemplateRef)); } });
/*@__PURE__*/ ɵngcc0.ɵsetClassMetadata(NgHeaderTemplateDirective, [{
        type: Directive,
        args: [{ selector: '[ng-header-tmp]' }]
    }], function () { return [{ type: TemplateRef }]; }, { template: [] });
    return NgHeaderTemplateDirective;
}());
export { NgHeaderTemplateDirective };
if (false) {
    /** @type {?} */
    NgHeaderTemplateDirective.prototype.template;
}
var NgFooterTemplateDirective = /** @class */ (function () {
    function NgFooterTemplateDirective(template) {
        this.template = template;
    }
    /** @nocollapse */
    NgFooterTemplateDirective.ctorParameters = function () { return [
        { type: TemplateRef }
    ]; };
NgFooterTemplateDirective.ngDirectiveDef = ɵngcc0.ɵɵdefineDirective({ type: NgFooterTemplateDirective, selectors: [["", "ng-footer-tmp", ""]], factory: function NgFooterTemplateDirective_Factory(t) { return new (t || NgFooterTemplateDirective)(ɵngcc0.ɵɵdirectiveInject(TemplateRef)); } });
/*@__PURE__*/ ɵngcc0.ɵsetClassMetadata(NgFooterTemplateDirective, [{
        type: Directive,
        args: [{ selector: '[ng-footer-tmp]' }]
    }], function () { return [{ type: TemplateRef }]; }, { template: [] });
    return NgFooterTemplateDirective;
}());
export { NgFooterTemplateDirective };
if (false) {
    /** @type {?} */
    NgFooterTemplateDirective.prototype.template;
}
var NgNotFoundTemplateDirective = /** @class */ (function () {
    function NgNotFoundTemplateDirective(template) {
        this.template = template;
    }
    /** @nocollapse */
    NgNotFoundTemplateDirective.ctorParameters = function () { return [
        { type: TemplateRef }
    ]; };
NgNotFoundTemplateDirective.ngDirectiveDef = ɵngcc0.ɵɵdefineDirective({ type: NgNotFoundTemplateDirective, selectors: [["", "ng-notfound-tmp", ""]], factory: function NgNotFoundTemplateDirective_Factory(t) { return new (t || NgNotFoundTemplateDirective)(ɵngcc0.ɵɵdirectiveInject(TemplateRef)); } });
/*@__PURE__*/ ɵngcc0.ɵsetClassMetadata(NgNotFoundTemplateDirective, [{
        type: Directive,
        args: [{ selector: '[ng-notfound-tmp]' }]
    }], function () { return [{ type: TemplateRef }]; }, { template: [] });
    return NgNotFoundTemplateDirective;
}());
export { NgNotFoundTemplateDirective };
if (false) {
    /** @type {?} */
    NgNotFoundTemplateDirective.prototype.template;
}
var NgTypeToSearchTemplateDirective = /** @class */ (function () {
    function NgTypeToSearchTemplateDirective(template) {
        this.template = template;
    }
    /** @nocollapse */
    NgTypeToSearchTemplateDirective.ctorParameters = function () { return [
        { type: TemplateRef }
    ]; };
NgTypeToSearchTemplateDirective.ngDirectiveDef = ɵngcc0.ɵɵdefineDirective({ type: NgTypeToSearchTemplateDirective, selectors: [["", "ng-typetosearch-tmp", ""]], factory: function NgTypeToSearchTemplateDirective_Factory(t) { return new (t || NgTypeToSearchTemplateDirective)(ɵngcc0.ɵɵdirectiveInject(TemplateRef)); } });
/*@__PURE__*/ ɵngcc0.ɵsetClassMetadata(NgTypeToSearchTemplateDirective, [{
        type: Directive,
        args: [{ selector: '[ng-typetosearch-tmp]' }]
    }], function () { return [{ type: TemplateRef }]; }, { template: [] });
    return NgTypeToSearchTemplateDirective;
}());
export { NgTypeToSearchTemplateDirective };
if (false) {
    /** @type {?} */
    NgTypeToSearchTemplateDirective.prototype.template;
}
var NgLoadingTextTemplateDirective = /** @class */ (function () {
    function NgLoadingTextTemplateDirective(template) {
        this.template = template;
    }
    /** @nocollapse */
    NgLoadingTextTemplateDirective.ctorParameters = function () { return [
        { type: TemplateRef }
    ]; };
NgLoadingTextTemplateDirective.ngDirectiveDef = ɵngcc0.ɵɵdefineDirective({ type: NgLoadingTextTemplateDirective, selectors: [["", "ng-loadingtext-tmp", ""]], factory: function NgLoadingTextTemplateDirective_Factory(t) { return new (t || NgLoadingTextTemplateDirective)(ɵngcc0.ɵɵdirectiveInject(TemplateRef)); } });
/*@__PURE__*/ ɵngcc0.ɵsetClassMetadata(NgLoadingTextTemplateDirective, [{
        type: Directive,
        args: [{ selector: '[ng-loadingtext-tmp]' }]
    }], function () { return [{ type: TemplateRef }]; }, { template: [] });
    return NgLoadingTextTemplateDirective;
}());
export { NgLoadingTextTemplateDirective };
if (false) {
    /** @type {?} */
    NgLoadingTextTemplateDirective.prototype.template;
}
var NgTagTemplateDirective = /** @class */ (function () {
    function NgTagTemplateDirective(template) {
        this.template = template;
    }
    /** @nocollapse */
    NgTagTemplateDirective.ctorParameters = function () { return [
        { type: TemplateRef }
    ]; };
NgTagTemplateDirective.ngDirectiveDef = ɵngcc0.ɵɵdefineDirective({ type: NgTagTemplateDirective, selectors: [["", "ng-tag-tmp", ""]], factory: function NgTagTemplateDirective_Factory(t) { return new (t || NgTagTemplateDirective)(ɵngcc0.ɵɵdirectiveInject(TemplateRef)); } });
/*@__PURE__*/ ɵngcc0.ɵsetClassMetadata(NgTagTemplateDirective, [{
        type: Directive,
        args: [{ selector: '[ng-tag-tmp]' }]
    }], function () { return [{ type: TemplateRef }]; }, { template: [] });
    return NgTagTemplateDirective;
}());
export { NgTagTemplateDirective };
if (false) {
    /** @type {?} */
    NgTagTemplateDirective.prototype.template;
}
var NgLoadingSpinnerTemplateDirective = /** @class */ (function () {
    function NgLoadingSpinnerTemplateDirective(template) {
        this.template = template;
    }
    /** @nocollapse */
    NgLoadingSpinnerTemplateDirective.ctorParameters = function () { return [
        { type: TemplateRef }
    ]; };
NgLoadingSpinnerTemplateDirective.ngDirectiveDef = ɵngcc0.ɵɵdefineDirective({ type: NgLoadingSpinnerTemplateDirective, selectors: [["", "ng-loadingspinner-tmp", ""]], factory: function NgLoadingSpinnerTemplateDirective_Factory(t) { return new (t || NgLoadingSpinnerTemplateDirective)(ɵngcc0.ɵɵdirectiveInject(TemplateRef)); } });
/*@__PURE__*/ ɵngcc0.ɵsetClassMetadata(NgLoadingSpinnerTemplateDirective, [{
        type: Directive,
        args: [{ selector: '[ng-loadingspinner-tmp]' }]
    }], function () { return [{ type: TemplateRef }]; }, { template: [] });
    return NgLoadingSpinnerTemplateDirective;
}());
export { NgLoadingSpinnerTemplateDirective };
if (false) {
    /** @type {?} */
    NgLoadingSpinnerTemplateDirective.prototype.template;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,
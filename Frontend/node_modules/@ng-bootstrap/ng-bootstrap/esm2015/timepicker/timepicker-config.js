/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Injectable } from '@angular/core';
import * as i0 from "@angular/core";
/**
 * A configuration service for the [`NgbTimepicker`](#/components/timepicker/api#NgbTimepicker) component.
 *
 * You can inject this service, typically in your root component, and customize the values of its properties in
 * order to provide default values for all the timepickers used in the application.
 */
import * as ɵngcc0 from '@angular/core';
export class NgbTimepickerConfig {
    constructor() {
        this.meridian = false;
        this.spinners = true;
        this.seconds = false;
        this.hourStep = 1;
        this.minuteStep = 1;
        this.secondStep = 1;
        this.disabled = false;
        this.readonlyInputs = false;
        this.size = 'medium';
    }
}
NgbTimepickerConfig.ngInjectableDef = ɵngcc0.ɵɵdefineInjectable({ token: NgbTimepickerConfig, factory: function NgbTimepickerConfig_Factory(t) { return new (t || NgbTimepickerConfig)(); }, providedIn: 'root' });
/*@__PURE__*/ ɵngcc0.ɵsetClassMetadata(NgbTimepickerConfig, [{
        type: Injectable,
        args: [{ providedIn: 'root' }]
    }], function () { return []; }, { constructor: [], meridian: [], spinners: [], seconds: [], hourStep: [], minuteStep: [], secondStep: [], disabled: [], readonlyInputs: [], size: [] });
/** @nocollapse */ NgbTimepickerConfig.ngInjectableDef = i0.ɵɵdefineInjectable({ factory: function NgbTimepickerConfig_Factory() { return new NgbTimepickerConfig(); }, token: NgbTimepickerConfig, providedIn: "root" });
if (false) {
    /** @type {?} */
    NgbTimepickerConfig.prototype.meridian;
    /** @type {?} */
    NgbTimepickerConfig.prototype.spinners;
    /** @type {?} */
    NgbTimepickerConfig.prototype.seconds;
    /** @type {?} */
    NgbTimepickerConfig.prototype.hourStep;
    /** @type {?} */
    NgbTimepickerConfig.prototype.minuteStep;
    /** @type {?} */
    NgbTimepickerConfig.prototype.secondStep;
    /** @type {?} */
    NgbTimepickerConfig.prototype.disabled;
    /** @type {?} */
    NgbTimepickerConfig.prototype.readonlyInputs;
    /** @type {?} */
    NgbTimepickerConfig.prototype.size;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImM6L3BhdHJvbmVzL3BhdHJvbmVzU2lkZXJjYVdlYi9Gcm9udGVuZC9ub2RlX21vZHVsZXMvQG5nLWJvb3RzdHJhcC9uZy1ib290c3RyYXAvZXNtMjAxNS90aW1lcGlja2VyL3RpbWVwaWNrZXItY29uZmlnLmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBOzs7Ozs7Ozs7Ozs7O0FBWUE7Ozs7Ozs7Ozs7Ozs7Ozs7O0NBWUMsMkxBR0MiLCJmaWxlIjoidGltZXBpY2tlci1jb25maWcuanMiLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIEBmaWxlb3ZlcnZpZXcgYWRkZWQgYnkgdHNpY2tsZVxuICogQHN1cHByZXNzIHtjaGVja1R5cGVzLGV4dHJhUmVxdWlyZSxtaXNzaW5nT3ZlcnJpZGUsbWlzc2luZ1JldHVybix1bnVzZWRQcml2YXRlTWVtYmVycyx1c2VsZXNzQ29kZX0gY2hlY2tlZCBieSB0c2NcbiAqL1xuaW1wb3J0IHsgSW5qZWN0YWJsZSB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0ICogYXMgaTAgZnJvbSBcIkBhbmd1bGFyL2NvcmVcIjtcbi8qKlxuICogQSBjb25maWd1cmF0aW9uIHNlcnZpY2UgZm9yIHRoZSBbYE5nYlRpbWVwaWNrZXJgXSgjL2NvbXBvbmVudHMvdGltZXBpY2tlci9hcGkjTmdiVGltZXBpY2tlcikgY29tcG9uZW50LlxuICpcbiAqIFlvdSBjYW4gaW5qZWN0IHRoaXMgc2VydmljZSwgdHlwaWNhbGx5IGluIHlvdXIgcm9vdCBjb21wb25lbnQsIGFuZCBjdXN0b21pemUgdGhlIHZhbHVlcyBvZiBpdHMgcHJvcGVydGllcyBpblxuICogb3JkZXIgdG8gcHJvdmlkZSBkZWZhdWx0IHZhbHVlcyBmb3IgYWxsIHRoZSB0aW1lcGlja2VycyB1c2VkIGluIHRoZSBhcHBsaWNhdGlvbi5cbiAqL1xuZXhwb3J0IGNsYXNzIE5nYlRpbWVwaWNrZXJDb25maWcge1xuICAgIGNvbnN0cnVjdG9yKCkge1xuICAgICAgICB0aGlzLm1lcmlkaWFuID0gZmFsc2U7XG4gICAgICAgIHRoaXMuc3Bpbm5lcnMgPSB0cnVlO1xuICAgICAgICB0aGlzLnNlY29uZHMgPSBmYWxzZTtcbiAgICAgICAgdGhpcy5ob3VyU3RlcCA9IDE7XG4gICAgICAgIHRoaXMubWludXRlU3RlcCA9IDE7XG4gICAgICAgIHRoaXMuc2Vjb25kU3RlcCA9IDE7XG4gICAgICAgIHRoaXMuZGlzYWJsZWQgPSBmYWxzZTtcbiAgICAgICAgdGhpcy5yZWFkb25seUlucHV0cyA9IGZhbHNlO1xuICAgICAgICB0aGlzLnNpemUgPSAnbWVkaXVtJztcbiAgICB9XG59XG5OZ2JUaW1lcGlja2VyQ29uZmlnLmRlY29yYXRvcnMgPSBbXG4gICAgeyB0eXBlOiBJbmplY3RhYmxlLCBhcmdzOiBbeyBwcm92aWRlZEluOiAncm9vdCcgfSxdIH1cbl07XG4vKiogQG5vY29sbGFwc2UgKi8gTmdiVGltZXBpY2tlckNvbmZpZy5uZ0luamVjdGFibGVEZWYgPSBpMC7Jtcm1ZGVmaW5lSW5qZWN0YWJsZSh7IGZhY3Rvcnk6IGZ1bmN0aW9uIE5nYlRpbWVwaWNrZXJDb25maWdfRmFjdG9yeSgpIHsgcmV0dXJuIG5ldyBOZ2JUaW1lcGlja2VyQ29uZmlnKCk7IH0sIHRva2VuOiBOZ2JUaW1lcGlja2VyQ29uZmlnLCBwcm92aWRlZEluOiBcInJvb3RcIiB9KTtcbmlmIChmYWxzZSkge1xuICAgIC8qKiBAdHlwZSB7P30gKi9cbiAgICBOZ2JUaW1lcGlja2VyQ29uZmlnLnByb3RvdHlwZS5tZXJpZGlhbjtcbiAgICAvKiogQHR5cGUgez99ICovXG4gICAgTmdiVGltZXBpY2tlckNvbmZpZy5wcm90b3R5cGUuc3Bpbm5lcnM7XG4gICAgLyoqIEB0eXBlIHs/fSAqL1xuICAgIE5nYlRpbWVwaWNrZXJDb25maWcucHJvdG90eXBlLnNlY29uZHM7XG4gICAgLyoqIEB0eXBlIHs/fSAqL1xuICAgIE5nYlRpbWVwaWNrZXJDb25maWcucHJvdG90eXBlLmhvdXJTdGVwO1xuICAgIC8qKiBAdHlwZSB7P30gKi9cbiAgICBOZ2JUaW1lcGlja2VyQ29uZmlnLnByb3RvdHlwZS5taW51dGVTdGVwO1xuICAgIC8qKiBAdHlwZSB7P30gKi9cbiAgICBOZ2JUaW1lcGlja2VyQ29uZmlnLnByb3RvdHlwZS5zZWNvbmRTdGVwO1xuICAgIC8qKiBAdHlwZSB7P30gKi9cbiAgICBOZ2JUaW1lcGlja2VyQ29uZmlnLnByb3RvdHlwZS5kaXNhYmxlZDtcbiAgICAvKiogQHR5cGUgez99ICovXG4gICAgTmdiVGltZXBpY2tlckNvbmZpZy5wcm90b3R5cGUucmVhZG9ubHlJbnB1dHM7XG4gICAgLyoqIEB0eXBlIHs/fSAqL1xuICAgIE5nYlRpbWVwaWNrZXJDb25maWcucHJvdG90eXBlLnNpemU7XG59XG4iXX0=
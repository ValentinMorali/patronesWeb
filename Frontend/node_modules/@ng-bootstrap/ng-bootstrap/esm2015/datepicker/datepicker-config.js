/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Injectable } from '@angular/core';
import * as i0 from "@angular/core";
/**
 * A configuration service for the [`NgbDatepicker`](#/components/datepicker/api#NgbDatepicker) component.
 *
 * You can inject this service, typically in your root component, and customize the values of its properties in
 * order to provide default values for all the datepickers used in the application.
 */
import * as ɵngcc0 from '@angular/core';
export class NgbDatepickerConfig {
    constructor() {
        this.displayMonths = 1;
        this.firstDayOfWeek = 1;
        this.navigation = 'select';
        this.outsideDays = 'visible';
        this.showWeekdays = true;
        this.showWeekNumbers = false;
    }
}
NgbDatepickerConfig.ngInjectableDef = ɵngcc0.ɵɵdefineInjectable({ token: NgbDatepickerConfig, factory: function NgbDatepickerConfig_Factory(t) { return new (t || NgbDatepickerConfig)(); }, providedIn: 'root' });
/*@__PURE__*/ ɵngcc0.ɵsetClassMetadata(NgbDatepickerConfig, [{
        type: Injectable,
        args: [{ providedIn: 'root' }]
    }], function () { return []; }, { constructor: [], displayMonths: [], firstDayOfWeek: [], navigation: [], outsideDays: [], showWeekdays: [], showWeekNumbers: [] });
/** @nocollapse */ NgbDatepickerConfig.ngInjectableDef = i0.ɵɵdefineInjectable({ factory: function NgbDatepickerConfig_Factory() { return new NgbDatepickerConfig(); }, token: NgbDatepickerConfig, providedIn: "root" });
if (false) {
    /** @type {?} */
    NgbDatepickerConfig.prototype.dayTemplate;
    /** @type {?} */
    NgbDatepickerConfig.prototype.dayTemplateData;
    /** @type {?} */
    NgbDatepickerConfig.prototype.footerTemplate;
    /** @type {?} */
    NgbDatepickerConfig.prototype.displayMonths;
    /** @type {?} */
    NgbDatepickerConfig.prototype.firstDayOfWeek;
    /** @type {?} */
    NgbDatepickerConfig.prototype.markDisabled;
    /** @type {?} */
    NgbDatepickerConfig.prototype.minDate;
    /** @type {?} */
    NgbDatepickerConfig.prototype.maxDate;
    /** @type {?} */
    NgbDatepickerConfig.prototype.navigation;
    /** @type {?} */
    NgbDatepickerConfig.prototype.outsideDays;
    /** @type {?} */
    NgbDatepickerConfig.prototype.showWeekdays;
    /** @type {?} */
    NgbDatepickerConfig.prototype.showWeekNumbers;
    /** @type {?} */
    NgbDatepickerConfig.prototype.startDate;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImM6L3BhdHJvbmVzL3BhdHJvbmVzU2lkZXJjYVdlYi9Gcm9udGVuZC9ub2RlX21vZHVsZXMvQG5nLWJvb3RzdHJhcC9uZy1ib290c3RyYXAvZXNtMjAxNS9kYXRlcGlja2VyL2RhdGVwaWNrZXItY29uZmlnLmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBOzs7Ozs7Ozs7Ozs7O0FBWUE7Ozs7Ozs7Ozs7Ozs7O0NBU0MsdUtBR0MiLCJmaWxlIjoiZGF0ZXBpY2tlci1jb25maWcuanMiLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIEBmaWxlb3ZlcnZpZXcgYWRkZWQgYnkgdHNpY2tsZVxuICogQHN1cHByZXNzIHtjaGVja1R5cGVzLGV4dHJhUmVxdWlyZSxtaXNzaW5nT3ZlcnJpZGUsbWlzc2luZ1JldHVybix1bnVzZWRQcml2YXRlTWVtYmVycyx1c2VsZXNzQ29kZX0gY2hlY2tlZCBieSB0c2NcbiAqL1xuaW1wb3J0IHsgSW5qZWN0YWJsZSB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0ICogYXMgaTAgZnJvbSBcIkBhbmd1bGFyL2NvcmVcIjtcbi8qKlxuICogQSBjb25maWd1cmF0aW9uIHNlcnZpY2UgZm9yIHRoZSBbYE5nYkRhdGVwaWNrZXJgXSgjL2NvbXBvbmVudHMvZGF0ZXBpY2tlci9hcGkjTmdiRGF0ZXBpY2tlcikgY29tcG9uZW50LlxuICpcbiAqIFlvdSBjYW4gaW5qZWN0IHRoaXMgc2VydmljZSwgdHlwaWNhbGx5IGluIHlvdXIgcm9vdCBjb21wb25lbnQsIGFuZCBjdXN0b21pemUgdGhlIHZhbHVlcyBvZiBpdHMgcHJvcGVydGllcyBpblxuICogb3JkZXIgdG8gcHJvdmlkZSBkZWZhdWx0IHZhbHVlcyBmb3IgYWxsIHRoZSBkYXRlcGlja2VycyB1c2VkIGluIHRoZSBhcHBsaWNhdGlvbi5cbiAqL1xuZXhwb3J0IGNsYXNzIE5nYkRhdGVwaWNrZXJDb25maWcge1xuICAgIGNvbnN0cnVjdG9yKCkge1xuICAgICAgICB0aGlzLmRpc3BsYXlNb250aHMgPSAxO1xuICAgICAgICB0aGlzLmZpcnN0RGF5T2ZXZWVrID0gMTtcbiAgICAgICAgdGhpcy5uYXZpZ2F0aW9uID0gJ3NlbGVjdCc7XG4gICAgICAgIHRoaXMub3V0c2lkZURheXMgPSAndmlzaWJsZSc7XG4gICAgICAgIHRoaXMuc2hvd1dlZWtkYXlzID0gdHJ1ZTtcbiAgICAgICAgdGhpcy5zaG93V2Vla051bWJlcnMgPSBmYWxzZTtcbiAgICB9XG59XG5OZ2JEYXRlcGlja2VyQ29uZmlnLmRlY29yYXRvcnMgPSBbXG4gICAgeyB0eXBlOiBJbmplY3RhYmxlLCBhcmdzOiBbeyBwcm92aWRlZEluOiAncm9vdCcgfSxdIH1cbl07XG4vKiogQG5vY29sbGFwc2UgKi8gTmdiRGF0ZXBpY2tlckNvbmZpZy5uZ0luamVjdGFibGVEZWYgPSBpMC7Jtcm1ZGVmaW5lSW5qZWN0YWJsZSh7IGZhY3Rvcnk6IGZ1bmN0aW9uIE5nYkRhdGVwaWNrZXJDb25maWdfRmFjdG9yeSgpIHsgcmV0dXJuIG5ldyBOZ2JEYXRlcGlja2VyQ29uZmlnKCk7IH0sIHRva2VuOiBOZ2JEYXRlcGlja2VyQ29uZmlnLCBwcm92aWRlZEluOiBcInJvb3RcIiB9KTtcbmlmIChmYWxzZSkge1xuICAgIC8qKiBAdHlwZSB7P30gKi9cbiAgICBOZ2JEYXRlcGlja2VyQ29uZmlnLnByb3RvdHlwZS5kYXlUZW1wbGF0ZTtcbiAgICAvKiogQHR5cGUgez99ICovXG4gICAgTmdiRGF0ZXBpY2tlckNvbmZpZy5wcm90b3R5cGUuZGF5VGVtcGxhdGVEYXRhO1xuICAgIC8qKiBAdHlwZSB7P30gKi9cbiAgICBOZ2JEYXRlcGlja2VyQ29uZmlnLnByb3RvdHlwZS5mb290ZXJUZW1wbGF0ZTtcbiAgICAvKiogQHR5cGUgez99ICovXG4gICAgTmdiRGF0ZXBpY2tlckNvbmZpZy5wcm90b3R5cGUuZGlzcGxheU1vbnRocztcbiAgICAvKiogQHR5cGUgez99ICovXG4gICAgTmdiRGF0ZXBpY2tlckNvbmZpZy5wcm90b3R5cGUuZmlyc3REYXlPZldlZWs7XG4gICAgLyoqIEB0eXBlIHs/fSAqL1xuICAgIE5nYkRhdGVwaWNrZXJDb25maWcucHJvdG90eXBlLm1hcmtEaXNhYmxlZDtcbiAgICAvKiogQHR5cGUgez99ICovXG4gICAgTmdiRGF0ZXBpY2tlckNvbmZpZy5wcm90b3R5cGUubWluRGF0ZTtcbiAgICAvKiogQHR5cGUgez99ICovXG4gICAgTmdiRGF0ZXBpY2tlckNvbmZpZy5wcm90b3R5cGUubWF4RGF0ZTtcbiAgICAvKiogQHR5cGUgez99ICovXG4gICAgTmdiRGF0ZXBpY2tlckNvbmZpZy5wcm90b3R5cGUubmF2aWdhdGlvbjtcbiAgICAvKiogQHR5cGUgez99ICovXG4gICAgTmdiRGF0ZXBpY2tlckNvbmZpZy5wcm90b3R5cGUub3V0c2lkZURheXM7XG4gICAgLyoqIEB0eXBlIHs/fSAqL1xuICAgIE5nYkRhdGVwaWNrZXJDb25maWcucHJvdG90eXBlLnNob3dXZWVrZGF5cztcbiAgICAvKiogQHR5cGUgez99ICovXG4gICAgTmdiRGF0ZXBpY2tlckNvbmZpZy5wcm90b3R5cGUuc2hvd1dlZWtOdW1iZXJzO1xuICAgIC8qKiBAdHlwZSB7P30gKi9cbiAgICBOZ2JEYXRlcGlja2VyQ29uZmlnLnByb3RvdHlwZS5zdGFydERhdGU7XG59XG4iXX0=
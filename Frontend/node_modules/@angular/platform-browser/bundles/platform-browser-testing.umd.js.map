{"version":3,"sources":["c:/patrones/patronesSidercaWeb/Frontend/node_modules/@angular/platform-browser/bundles/platform-browser-testing.umd.js"],"names":[],"mappings":"AAAA;;;;;;;gNAOkJ;iMACG;;8DAErG;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;SAmLvC;;;;;;;;;;;;;;;;;;0CAUwB","file":"platform-browser-testing.umd.js","sourcesContent":["/**\n * @license Angular v8.1.3\n * (c) 2010-2019 Google LLC. https://angular.io/\n * License: MIT\n */\n\n(function (global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('@angular/core'), require('@angular/platform-browser')) :\n    typeof define === 'function' && define.amd ? define('@angular/platform-browser/testing', ['exports', '@angular/core', '@angular/platform-browser'], factory) :\n    (global = global || self, factory((global.ng = global.ng || {}, global.ng.platformBrowser = global.ng.platformBrowser || {}, global.ng.platformBrowser.testing = {}), global.ng.core, global.ng.platformBrowser));\n}(this, function (exports, core, platformBrowser) { 'use strict';\n\n    /*! *****************************************************************************\r\n    Copyright (c) Microsoft Corporation. All rights reserved.\r\n    Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\n    this file except in compliance with the License. You may obtain a copy of the\r\n    License at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\n    THIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n    KIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\n    WARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\n    MERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\n    See the Apache Version 2.0 License for specific language governing permissions\r\n    and limitations under the License.\r\n    ***************************************************************************** */\r\n\r\n    function __decorate(decorators, target, key, desc) {\r\n        var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n        if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n        else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n        return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n    }\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n    var BrowserDetection = /** @class */ (function () {\n        function BrowserDetection(ua) {\n            this._overrideUa = ua;\n        }\n        Object.defineProperty(BrowserDetection.prototype, \"_ua\", {\n            get: function () {\n                if (typeof this._overrideUa === 'string') {\n                    return this._overrideUa;\n                }\n                return platformBrowser.ɵgetDOM() ? platformBrowser.ɵgetDOM().getUserAgent() : '';\n            },\n            enumerable: true,\n            configurable: true\n        });\n        BrowserDetection.setup = function () { };\n        Object.defineProperty(BrowserDetection.prototype, \"isFirefox\", {\n            get: function () { return this._ua.indexOf('Firefox') > -1; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(BrowserDetection.prototype, \"isAndroid\", {\n            get: function () {\n                return this._ua.indexOf('Mozilla/5.0') > -1 && this._ua.indexOf('Android') > -1 &&\n                    this._ua.indexOf('AppleWebKit') > -1 && this._ua.indexOf('Chrome') == -1 &&\n                    this._ua.indexOf('IEMobile') == -1;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(BrowserDetection.prototype, \"isEdge\", {\n            get: function () { return this._ua.indexOf('Edge') > -1; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(BrowserDetection.prototype, \"isIE\", {\n            get: function () { return this._ua.indexOf('Trident') > -1; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(BrowserDetection.prototype, \"isWebkit\", {\n            get: function () {\n                return this._ua.indexOf('AppleWebKit') > -1 && this._ua.indexOf('Edge') == -1 &&\n                    this._ua.indexOf('IEMobile') == -1;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(BrowserDetection.prototype, \"isIOS7\", {\n            get: function () {\n                return (this._ua.indexOf('iPhone OS 7') > -1 || this._ua.indexOf('iPad OS 7') > -1) &&\n                    this._ua.indexOf('IEMobile') == -1;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(BrowserDetection.prototype, \"isSlow\", {\n            get: function () { return this.isAndroid || this.isIE || this.isIOS7; },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(BrowserDetection.prototype, \"supportsNativeIntlApi\", {\n            // The Intl API is only natively supported in Chrome, Firefox, IE11 and Edge.\n            // This detector is needed in tests to make the difference between:\n            // 1) IE11/Edge: they have a native Intl API, but with some discrepancies\n            // 2) IE9/IE10: they use the polyfill, and so no discrepancies\n            get: function () {\n                return !!core.ɵglobal.Intl && core.ɵglobal.Intl !== core.ɵglobal.IntlPolyfill;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(BrowserDetection.prototype, \"isChromeDesktop\", {\n            get: function () {\n                return this._ua.indexOf('Chrome') > -1 && this._ua.indexOf('Mobile Safari') == -1 &&\n                    this._ua.indexOf('Edge') == -1;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(BrowserDetection.prototype, \"isOldChrome\", {\n            // \"Old Chrome\" means Chrome 3X, where there are some discrepancies in the Intl API.\n            // Android 4.4 and 5.X have such browsers by default (respectively 30 and 39).\n            get: function () {\n                return this._ua.indexOf('Chrome') > -1 && this._ua.indexOf('Chrome/3') > -1 &&\n                    this._ua.indexOf('Edge') == -1;\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(BrowserDetection.prototype, \"supportsCustomElements\", {\n            get: function () { return (typeof core.ɵglobal.customElements !== 'undefined'); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(BrowserDetection.prototype, \"supportsDeprecatedCustomCustomElementsV0\", {\n            get: function () {\n                return (typeof document.registerElement !== 'undefined');\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(BrowserDetection.prototype, \"supportsRegExUnicodeFlag\", {\n            get: function () { return RegExp.prototype.hasOwnProperty('unicode'); },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(BrowserDetection.prototype, \"supportsShadowDom\", {\n            get: function () {\n                var testEl = document.createElement('div');\n                return (typeof testEl.attachShadow !== 'undefined');\n            },\n            enumerable: true,\n            configurable: true\n        });\n        Object.defineProperty(BrowserDetection.prototype, \"supportsDeprecatedShadowDomV0\", {\n            get: function () {\n                var testEl = document.createElement('div');\n                return (typeof testEl.createShadowRoot !== 'undefined');\n            },\n            enumerable: true,\n            configurable: true\n        });\n        return BrowserDetection;\n    }());\n    BrowserDetection.setup();\n    function createNgZone() {\n        return new core.NgZone({ enableLongStackTrace: true });\n    }\n\n    function initBrowserTests() {\n        platformBrowser.ɵBrowserDomAdapter.makeCurrent();\n        BrowserDetection.setup();\n    }\n    var _TEST_BROWSER_PLATFORM_PROVIDERS = [{ provide: core.PLATFORM_INITIALIZER, useValue: initBrowserTests, multi: true }];\n    /**\n     * Platform for testing\n     *\n     * @publicApi\n     */\n    var platformBrowserTesting = core.createPlatformFactory(core.platformCore, 'browserTesting', _TEST_BROWSER_PLATFORM_PROVIDERS);\n    var ɵ0 = createNgZone;\n    /**\n     * NgModule for testing.\n     *\n     * @publicApi\n     */\n    var BrowserTestingModule = /** @class */ (function () {\n        function BrowserTestingModule() {\n        }\n        BrowserTestingModule = __decorate([\n            core.NgModule({\n                exports: [platformBrowser.BrowserModule],\n                providers: [\n                    { provide: core.APP_ID, useValue: 'a' },\n                    platformBrowser.ɵELEMENT_PROBE_PROVIDERS,\n                    { provide: core.NgZone, useFactory: ɵ0 },\n                ]\n            })\n        ], BrowserTestingModule);\n        return BrowserTestingModule;\n    }());\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * Generated bundle index. Do not edit.\n     */\n\n    exports.ɵangular_packages_platform_browser_testing_testing_a = createNgZone;\n    exports.platformBrowserTesting = platformBrowserTesting;\n    exports.BrowserTestingModule = BrowserTestingModule;\n    exports.ɵ0 = ɵ0;\n\n    Object.defineProperty(exports, '__esModule', { value: true });\n\n}));\n"]}
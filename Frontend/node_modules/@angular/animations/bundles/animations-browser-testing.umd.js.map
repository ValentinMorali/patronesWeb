{"version":3,"sources":["c:/patrones/patronesSidercaWeb/Frontend/node_modules/@angular/animations/bundles/animations-browser-testing.umd.js"],"names":[],"mappings":"AAAA","file":"animations-browser-testing.umd.js","sourcesContent":["/**\n * @license Angular v8.1.3\n * (c) 2010-2019 Google LLC. https://angular.io/\n * License: MIT\n */\n\n(function (global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('@angular/animations'), require('@angular/animations/browser')) :\n    typeof define === 'function' && define.amd ? define('@angular/animations/browser/testing', ['exports', '@angular/animations', '@angular/animations/browser'], factory) :\n    (global = global || self, factory((global.ng = global.ng || {}, global.ng.animations = global.ng.animations || {}, global.ng.animations.browser = global.ng.animations.browser || {}, global.ng.animations.browser.testing = {}), global.ng.animations, global.ng.animations.browser));\n}(this, function (exports, animations, browser) { 'use strict';\n\n    /*! *****************************************************************************\r\n    Copyright (c) Microsoft Corporation. All rights reserved.\r\n    Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\n    this file except in compliance with the License. You may obtain a copy of the\r\n    License at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\n    THIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n    KIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\n    WARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\n    MERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\n    See the Apache Version 2.0 License for specific language governing permissions\r\n    and limitations under the License.\r\n    ***************************************************************************** */\r\n    /* global Reflect, Promise */\r\n\r\n    var extendStatics = function(d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    };\r\n\r\n    function __extends(d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    }\n\n    /**\n     * @publicApi\n     */\n    var MockAnimationDriver = /** @class */ (function () {\n        function MockAnimationDriver() {\n        }\n        MockAnimationDriver.prototype.validateStyleProperty = function (prop) { return browser.ɵvalidateStyleProperty(prop); };\n        MockAnimationDriver.prototype.matchesElement = function (element, selector) {\n            return browser.ɵmatchesElement(element, selector);\n        };\n        MockAnimationDriver.prototype.containsElement = function (elm1, elm2) { return browser.ɵcontainsElement(elm1, elm2); };\n        MockAnimationDriver.prototype.query = function (element, selector, multi) {\n            return browser.ɵinvokeQuery(element, selector, multi);\n        };\n        MockAnimationDriver.prototype.computeStyle = function (element, prop, defaultValue) {\n            return defaultValue || '';\n        };\n        MockAnimationDriver.prototype.animate = function (element, keyframes, duration, delay, easing, previousPlayers) {\n            if (previousPlayers === void 0) { previousPlayers = []; }\n            var player = new MockAnimationPlayer(element, keyframes, duration, delay, easing, previousPlayers);\n            MockAnimationDriver.log.push(player);\n            return player;\n        };\n        MockAnimationDriver.log = [];\n        return MockAnimationDriver;\n    }());\n    /**\n     * @publicApi\n     */\n    var MockAnimationPlayer = /** @class */ (function (_super) {\n        __extends(MockAnimationPlayer, _super);\n        function MockAnimationPlayer(element, keyframes, duration, delay, easing, previousPlayers) {\n            var _this = _super.call(this, duration, delay) || this;\n            _this.element = element;\n            _this.keyframes = keyframes;\n            _this.duration = duration;\n            _this.delay = delay;\n            _this.easing = easing;\n            _this.previousPlayers = previousPlayers;\n            _this.__finished = false;\n            _this.__started = false;\n            _this.previousStyles = {};\n            _this._onInitFns = [];\n            _this.currentSnapshot = {};\n            if (browser.ɵallowPreviousPlayerStylesMerge(duration, delay)) {\n                previousPlayers.forEach(function (player) {\n                    if (player instanceof MockAnimationPlayer) {\n                        var styles_1 = player.currentSnapshot;\n                        Object.keys(styles_1).forEach(function (prop) { return _this.previousStyles[prop] = styles_1[prop]; });\n                    }\n                });\n            }\n            return _this;\n        }\n        /* @internal */\n        MockAnimationPlayer.prototype.onInit = function (fn) { this._onInitFns.push(fn); };\n        /* @internal */\n        MockAnimationPlayer.prototype.init = function () {\n            _super.prototype.init.call(this);\n            this._onInitFns.forEach(function (fn) { return fn(); });\n            this._onInitFns = [];\n        };\n        MockAnimationPlayer.prototype.finish = function () {\n            _super.prototype.finish.call(this);\n            this.__finished = true;\n        };\n        MockAnimationPlayer.prototype.destroy = function () {\n            _super.prototype.destroy.call(this);\n            this.__finished = true;\n        };\n        /* @internal */\n        MockAnimationPlayer.prototype.triggerMicrotask = function () { };\n        MockAnimationPlayer.prototype.play = function () {\n            _super.prototype.play.call(this);\n            this.__started = true;\n        };\n        MockAnimationPlayer.prototype.hasStarted = function () { return this.__started; };\n        MockAnimationPlayer.prototype.beforeDestroy = function () {\n            var _this = this;\n            var captures = {};\n            Object.keys(this.previousStyles).forEach(function (prop) {\n                captures[prop] = _this.previousStyles[prop];\n            });\n            if (this.hasStarted()) {\n                // when assembling the captured styles, it's important that\n                // we build the keyframe styles in the following order:\n                // {other styles within keyframes, ... previousStyles }\n                this.keyframes.forEach(function (kf) {\n                    Object.keys(kf).forEach(function (prop) {\n                        if (prop != 'offset') {\n                            captures[prop] = _this.__finished ? kf[prop] : animations.AUTO_STYLE;\n                        }\n                    });\n                });\n            }\n            this.currentSnapshot = captures;\n        };\n        return MockAnimationPlayer;\n    }(animations.NoopAnimationPlayer));\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * @license\n     * Copyright Google Inc. All Rights Reserved.\n     *\n     * Use of this source code is governed by an MIT-style license that can be\n     * found in the LICENSE file at https://angular.io/license\n     */\n\n    /**\n     * Generated bundle index. Do not edit.\n     */\n\n    exports.MockAnimationDriver = MockAnimationDriver;\n    exports.MockAnimationPlayer = MockAnimationPlayer;\n\n    Object.defineProperty(exports, '__esModule', { value: true });\n\n}));\n"]}
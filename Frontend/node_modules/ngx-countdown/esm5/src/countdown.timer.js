import { Injectable } from '@angular/core';
import * as ɵngcc0 from '@angular/core';
var Timer = /** @class */ (function () {
    function Timer() {
        this.fns = [];
        this.commands = [];
        this.ing = false;
    }
    Timer.prototype.start = function () {
        if (this.ing === true)
            return;
        this.ing = true;
        this.nextTime = +new Date();
        this.process();
    };
    Timer.prototype.process = function () {
        var _this = this;
        while (this.commands.length) {
            this.commands.shift()();
        }
        var diff = +new Date() - this.nextTime;
        var count = 1 + Math.floor(diff / 100);
        diff = 100 - diff % 100;
        this.nextTime += 100 * count;
        var frequency, step, i, len;
        for (i = 0, len = this.fns.length; i < len; i += 2) {
            frequency = this.fns[i + 1];
            // 100/s
            if (0 === frequency) {
                this.fns[i](count);
                // 1000/s
            }
            else {
                // 先把末位至0，再每次加2
                frequency += 2 * count - 1;
                step = Math.floor(frequency / 20);
                if (step > 0) {
                    this.fns[i](step);
                }
                // 把末位还原成1
                this.fns[i + 1] = frequency % 20 + 1;
            }
        }
        if (this.ing) {
            setTimeout(function () { return _this.process(); }, diff);
        }
    };
    Timer.prototype.add = function (fn, frequency) {
        var _this = this;
        this.commands.push(function () {
            _this.fns.push(fn);
            _this.fns.push(frequency === 1000 ? 1 : 0);
            _this.ing = true;
        });
    };
    Timer.prototype.remove = function (fn) {
        var _this = this;
        this.commands.push(function () {
            var i = _this.fns.indexOf(fn);
            if (i !== -1) {
                _this.fns.splice(i, 2);
            }
            _this.ing = _this.fns.length > 0;
        });
    };
Timer.ngInjectableDef = ɵngcc0.ɵɵdefineInjectable({ token: Timer, factory: function Timer_Factory(t) { return new (t || Timer)(); }, providedIn: null });
/*@__PURE__*/ ɵngcc0.ɵsetClassMetadata(Timer, [{
        type: Injectable
    }], function () { return []; }, { fns: [], commands: [], ing: [], start: [], nextTime: [], process: [], add: [], remove: [] });
    return Timer;
}());
export { Timer };

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImM6L3BhdHJvbmVzL3BhdHJvbmVzU2lkZXJjYVdlYi9Gcm9udGVuZC9ub2RlX21vZHVsZXMvbmd4LWNvdW50ZG93bi9lc201L3NyYy9jb3VudGRvd24udGltZXIuanMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7O0FBQ0E7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O01BOERNOzs7O21JQUdBIiwiZmlsZSI6ImNvdW50ZG93bi50aW1lci5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEluamVjdGFibGUgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbnZhciBUaW1lciA9IC8qKiBAY2xhc3MgKi8gKGZ1bmN0aW9uICgpIHtcbiAgICBmdW5jdGlvbiBUaW1lcigpIHtcbiAgICAgICAgdGhpcy5mbnMgPSBbXTtcbiAgICAgICAgdGhpcy5jb21tYW5kcyA9IFtdO1xuICAgICAgICB0aGlzLmluZyA9IGZhbHNlO1xuICAgIH1cbiAgICBUaW1lci5wcm90b3R5cGUuc3RhcnQgPSBmdW5jdGlvbiAoKSB7XG4gICAgICAgIGlmICh0aGlzLmluZyA9PT0gdHJ1ZSlcbiAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgdGhpcy5pbmcgPSB0cnVlO1xuICAgICAgICB0aGlzLm5leHRUaW1lID0gK25ldyBEYXRlKCk7XG4gICAgICAgIHRoaXMucHJvY2VzcygpO1xuICAgIH07XG4gICAgVGltZXIucHJvdG90eXBlLnByb2Nlc3MgPSBmdW5jdGlvbiAoKSB7XG4gICAgICAgIHZhciBfdGhpcyA9IHRoaXM7XG4gICAgICAgIHdoaWxlICh0aGlzLmNvbW1hbmRzLmxlbmd0aCkge1xuICAgICAgICAgICAgdGhpcy5jb21tYW5kcy5zaGlmdCgpKCk7XG4gICAgICAgIH1cbiAgICAgICAgdmFyIGRpZmYgPSArbmV3IERhdGUoKSAtIHRoaXMubmV4dFRpbWU7XG4gICAgICAgIHZhciBjb3VudCA9IDEgKyBNYXRoLmZsb29yKGRpZmYgLyAxMDApO1xuICAgICAgICBkaWZmID0gMTAwIC0gZGlmZiAlIDEwMDtcbiAgICAgICAgdGhpcy5uZXh0VGltZSArPSAxMDAgKiBjb3VudDtcbiAgICAgICAgdmFyIGZyZXF1ZW5jeSwgc3RlcCwgaSwgbGVuO1xuICAgICAgICBmb3IgKGkgPSAwLCBsZW4gPSB0aGlzLmZucy5sZW5ndGg7IGkgPCBsZW47IGkgKz0gMikge1xuICAgICAgICAgICAgZnJlcXVlbmN5ID0gdGhpcy5mbnNbaSArIDFdO1xuICAgICAgICAgICAgLy8gMTAwL3NcbiAgICAgICAgICAgIGlmICgwID09PSBmcmVxdWVuY3kpIHtcbiAgICAgICAgICAgICAgICB0aGlzLmZuc1tpXShjb3VudCk7XG4gICAgICAgICAgICAgICAgLy8gMTAwMC9zXG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgICAgICAvLyDlhYjmiormnKvkvY3oh7Mw77yM5YaN5q+P5qyh5YqgMlxuICAgICAgICAgICAgICAgIGZyZXF1ZW5jeSArPSAyICogY291bnQgLSAxO1xuICAgICAgICAgICAgICAgIHN0ZXAgPSBNYXRoLmZsb29yKGZyZXF1ZW5jeSAvIDIwKTtcbiAgICAgICAgICAgICAgICBpZiAoc3RlcCA+IDApIHtcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5mbnNbaV0oc3RlcCk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIC8vIOaKiuacq+S9jei/mOWOn+aIkDFcbiAgICAgICAgICAgICAgICB0aGlzLmZuc1tpICsgMV0gPSBmcmVxdWVuY3kgJSAyMCArIDE7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgICAgaWYgKHRoaXMuaW5nKSB7XG4gICAgICAgICAgICBzZXRUaW1lb3V0KGZ1bmN0aW9uICgpIHsgcmV0dXJuIF90aGlzLnByb2Nlc3MoKTsgfSwgZGlmZik7XG4gICAgICAgIH1cbiAgICB9O1xuICAgIFRpbWVyLnByb3RvdHlwZS5hZGQgPSBmdW5jdGlvbiAoZm4sIGZyZXF1ZW5jeSkge1xuICAgICAgICB2YXIgX3RoaXMgPSB0aGlzO1xuICAgICAgICB0aGlzLmNvbW1hbmRzLnB1c2goZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgX3RoaXMuZm5zLnB1c2goZm4pO1xuICAgICAgICAgICAgX3RoaXMuZm5zLnB1c2goZnJlcXVlbmN5ID09PSAxMDAwID8gMSA6IDApO1xuICAgICAgICAgICAgX3RoaXMuaW5nID0gdHJ1ZTtcbiAgICAgICAgfSk7XG4gICAgfTtcbiAgICBUaW1lci5wcm90b3R5cGUucmVtb3ZlID0gZnVuY3Rpb24gKGZuKSB7XG4gICAgICAgIHZhciBfdGhpcyA9IHRoaXM7XG4gICAgICAgIHRoaXMuY29tbWFuZHMucHVzaChmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICB2YXIgaSA9IF90aGlzLmZucy5pbmRleE9mKGZuKTtcbiAgICAgICAgICAgIGlmIChpICE9PSAtMSkge1xuICAgICAgICAgICAgICAgIF90aGlzLmZucy5zcGxpY2UoaSwgMik7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBfdGhpcy5pbmcgPSBfdGhpcy5mbnMubGVuZ3RoID4gMDtcbiAgICAgICAgfSk7XG4gICAgfTtcbiAgICBUaW1lci5kZWNvcmF0b3JzID0gW1xuICAgICAgICB7IHR5cGU6IEluamVjdGFibGUgfVxuICAgIF07XG4gICAgcmV0dXJuIFRpbWVyO1xufSgpKTtcbmV4cG9ydCB7IFRpbWVyIH07XG4iXX0=
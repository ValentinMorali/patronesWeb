{"version":3,"file":"countdown.component.d.ts","sources":["c:/patrones/patronesSidercaWeb/Frontend/node_modules/ngx-countdown/src/countdown.component.d.ts"],"sourcesContent":["import { ElementRef, OnChanges, SimpleChanges, OnDestroy, EventEmitter, OnInit, SimpleChange } from '@angular/core';\nimport { Config } from './interfaces';\nimport { Timer } from './countdown.timer';\nimport { CountdownConfig } from './countdown.config';\nexport declare class CountdownComponent implements OnInit, OnChanges, OnDestroy {\n    private el;\n    private timer;\n    private cog;\n    private frequency;\n    private _notify;\n    private hands;\n    private left;\n    private paused;\n    /** 两种情况会触发：时间终止或调用 `stop()` */\n    private stoped;\n    config: Config;\n    readonly start: EventEmitter<{}>;\n    readonly finished: EventEmitter<{}>;\n    readonly notify: EventEmitter<{}>;\n    readonly event: EventEmitter<{\n        action: string;\n        left: number;\n    }>;\n    constructor(el: ElementRef, timer: Timer, cog: CountdownConfig);\n    /** 开始，当 `demand: false` 时触发 */\n    begin(): void;\n    /** 重新开始 */\n    restart(): void;\n    /** 停止 */\n    stop(): void;\n    /** 暂停（限未终止有效） */\n    pause(): void;\n    /** 恢复 */\n    resume(): void;\n    private callEvent;\n    private init;\n    private destroy;\n    /**\n     * 更新时钟\n     */\n    private reflow;\n    /**\n     * 重绘时钟\n     */\n    private repaint;\n    /**\n     * 获取倒计时剩余帧数\n     */\n    private getLeft;\n    /**\n     * 生成需要的html代码，辅助工具\n     */\n    private html;\n    /**\n     * 把值转换为独立的数字形式\n     */\n    private toDigitals;\n    ngOnInit(): void;\n    ngOnDestroy(): void;\n    ngOnChanges(changes: {\n        [P in keyof this]?: SimpleChange;\n    } & SimpleChanges): void;\n}\n"],"names":[],"mappings":"AAAA;;;;;AAIA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA0DA;"}
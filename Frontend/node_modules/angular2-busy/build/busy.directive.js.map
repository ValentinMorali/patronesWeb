{"version":3,"sources":["c:/patrones/patronesSidercaWeb/Frontend/node_modules/angular2-busy/build/busy.directive.js"],"names":[],"mappings":"AAAA;;;;;;;;;;;;;;;;;;;;;AAoBA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;cA0EM;;KAED,AAMH","file":"busy.directive.js","sourcesContent":["/**\n * @file Directive: Busy\n * @author yumao<yuzhang.lille@gmail.com>\n */\n\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar core_1 = require(\"@angular/core\");\nvar Subscription_1 = require(\"rxjs/Subscription\");\nvar util_1 = require(\"./util\");\nvar promise_tracker_service_1 = require(\"./promise-tracker.service\");\nvar busy_service_1 = require(\"./busy.service\");\nvar busy_component_1 = require(\"./busy.component\");\nvar busy_backdrop_component_1 = require(\"./busy-backdrop.component\");\n/**\n * ### Syntax\n *\n * - `<div [ngBusy]=\"busy\">...</div>`\n * - `<div [ngBusy]=\"[busyA, busyB, busyC]\">...</div>`\n * - `<div [ngBusy]=\"{busy: busy, message: 'Loading...', backdrop: false, delay: 200, minDuration: 600}\">...</div>`\n */\nvar BusyDirective = (function () {\n    function BusyDirective(service, tracker, cfResolver, vcRef, injector) {\n        this.service = service;\n        this.tracker = tracker;\n        this.cfResolver = cfResolver;\n        this.vcRef = vcRef;\n        this.injector = injector;\n    }\n    BusyDirective.prototype.normalizeOptions = function (options) {\n        if (!options) {\n            options = { busy: null };\n        }\n        else if (Array.isArray(options)\n            || options instanceof Promise\n            || options instanceof Subscription_1.Subscription) {\n            options = { busy: options };\n        }\n        options = Object.assign({}, this.service.config, options);\n        if (!Array.isArray(options.busy)) {\n            options.busy = [options.busy];\n        }\n        return options;\n    };\n    BusyDirective.prototype.dectectOptionsChange = function () {\n        if (util_1.equals(this.optionsNorm, this.optionsRecord)) {\n            return false;\n        }\n        this.optionsRecord = this.optionsNorm;\n        return true;\n    };\n    // As ngOnChanges does not work on Object detection, ngDoCheck is using\n    BusyDirective.prototype.ngDoCheck = function () {\n        var options = this.optionsNorm = this.normalizeOptions(this.options);\n        if (!this.dectectOptionsChange()) {\n            return;\n        }\n        if (this.busyRef) {\n            this.busyRef.instance.message = options.message;\n        }\n        !util_1.equals(options.busy, this.tracker.promiseList)\n            && this.tracker.reset({\n                promiseList: options.busy,\n                delay: options.delay,\n                minDuration: options.minDuration\n            });\n        if (!this.busyRef\n            || this.template !== options.template\n            || this.backdrop !== options.backdrop) {\n            this.destroyComponents();\n            this.template = options.template;\n            this.backdrop = options.backdrop;\n            options.backdrop && this.createBackdrop();\n            this.createBusy();\n        }\n    };\n    BusyDirective.prototype.ngOnDestroy = function () {\n        this.destroyComponents();\n    };\n    BusyDirective.prototype.destroyComponents = function () {\n        this.busyRef && this.busyRef.destroy();\n        this.backdropRef && this.backdropRef.destroy();\n    };\n    BusyDirective.prototype.createBackdrop = function () {\n        var backdropFactory = this.cfResolver.resolveComponentFactory(busy_backdrop_component_1.BusyBackdropComponent);\n        this.backdropRef = this.vcRef.createComponent(backdropFactory, null, this.injector);\n    };\n    BusyDirective.prototype.createBusy = function () {\n        var busyFactory = this.cfResolver.resolveComponentFactory(busy_component_1.BusyComponent);\n        this.busyRef = this.vcRef.createComponent(busyFactory, null, this.injector);\n        var _a = this.optionsNorm, message = _a.message, wrapperClass = _a.wrapperClass, template = _a.template;\n        var instance = this.busyRef.instance;\n        instance.message = message;\n        instance.wrapperClass = wrapperClass;\n        instance.template = template;\n    };\n    return BusyDirective;\n}());\nBusyDirective.decorators = [\n    { type: core_1.Directive, args: [{\n                selector: '[ngBusy]',\n                providers: [promise_tracker_service_1.PromiseTrackerService]\n            },] },\n];\n/** @nocollapse */\nBusyDirective.ctorParameters = function () { return [\n    { type: busy_service_1.BusyService, },\n    { type: promise_tracker_service_1.PromiseTrackerService, },\n    { type: core_1.ComponentFactoryResolver, },\n    { type: core_1.ViewContainerRef, },\n    { type: core_1.Injector, },\n]; };\nBusyDirective.propDecorators = {\n    'options': [{ type: core_1.Input, args: ['ngBusy',] },],\n};\nexports.BusyDirective = BusyDirective;\n"]}